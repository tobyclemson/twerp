apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'me.champeau.gradle.antlr4'

defaultTasks "test", "integrationTest"

buildscript {
    repositories {
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
        jcenter()
    }

    dependencies {
        classpath 'me.champeau.gradle:antlr4-gradle-plugin:0.1'
    }
}

repositories {
    mavenCentral()
}

configurations {
    compile.extendsFrom antlr4
    integrationTestCompile.extendsFrom runtime
}

dependencies {
    compile 'org.projectlombok:lombok:1.14.4'
    compile 'com.google.inject:guice:4.0-beta4'
    compile 'com.google.guava:guava:18.0'
    compile 'org.javafunk.funk:funk:0.1.22'

    testCompile 'org.testng:testng:6.8.8'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    integrationTestCompile 'org.testng:testng:6.8.8'
    integrationTestCompile 'org.mockito:mockito-core:1.9.5'
    integrationTestCompile 'org.hamcrest:hamcrest-core:1.3'
    integrationTestCompile 'org.hamcrest:hamcrest-library:1.3'
}

sourceSets {
    main {
        java {
            srcDirs += antlr4.output
        }
    }
    integrationTest {
        java {
            srcDir 'src/integration-test/java'
        }
        resources {
            srcDir 'src/integration-test/resources'
        }
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

antlr4 {
    source = file('src/main/antlr')
    output = file('src/main/java/twerp/lang/grammar')
    listener = false
    visitor = true
    extraArgs = ['-package', 'twerp.lang.grammar']
}

mainClassName = "twerp.lang.Main"

run {
    args = System.getProperty("arguments", "")
            .split(' ')
            .toList()
}

test {
    useTestNG()

    testLogging {
        showStandardStreams = false
        exceptionFormat "full"
    }
}

task integrationTest(type: Test) {
    useTestNG()

    testLogging {
        showStandardStreams = false
        exceptionFormat "full"
    }

    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath += sourceSets.integrationTest.runtimeClasspath
}

compileJava.dependsOn antlr4


task wrapper(type: Wrapper) {
    gradleVersion = "2.0"
}

idea {
    module {
        testSourceDirs += file('src/integration-test/java')
        testSourceDirs += file('src/integration-test/resources')
    }
}